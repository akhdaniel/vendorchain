version: '3.8'

networks:
  vendorchain-network:
    driver: bridge

volumes:
  postgres_data:
  fabric_ca_data:
  fabric_peer_data:
  fabric_orderer_data:
  odoo_web_data:
  odoo_config_data:

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: vendorchain-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-vendorchain}
      POSTGRES_USER: ${POSTGRES_USER:-odoo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-odoo}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - vendorchain-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-odoo} -d ${POSTGRES_DB:-vendorchain}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Odoo ERP System
  odoo:
    image: odoo:18
    container_name: vendorchain-odoo
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      HOST: postgres
      USER: ${POSTGRES_USER:-odoo}
      PASSWORD: ${POSTGRES_PASSWORD:-odoo}
      DB_NAME: ${POSTGRES_DB:-vendorchain}
      DB_PORT: 5432
      ODOO_RC: /etc/odoo/odoo.conf
    volumes:
      - odoo_web_data:/var/lib/odoo
      - odoo_config_data:/etc/odoo
      - ./odoo-addon:/mnt/extra-addons
      - ./config/odoo.conf:/etc/odoo/odoo.conf:ro
    ports:
      - "8069:8069"
      - "8071:8071"  # Longpolling port
      - "8072:8072"  # Longpolling port
    networks:
      - vendorchain-network
    command: ["odoo", "-d", "vendorchain", "-u", "vendor_contract_management"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8069/web/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # FastAPI Gateway
  fastapi-gateway:
    image: python:3.11-slim
    container_name: vendorchain-fastapi
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      peer0.org1.vendorchain.com:
        condition: service_started
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-odoo}:${POSTGRES_PASSWORD:-odoo}@postgres:5432/${POSTGRES_DB:-vendorchain}
      FABRIC_PEER_ENDPOINT: fabric-peer:7051
      FABRIC_ORDERER_ENDPOINT: fabric-orderer:7050
      FABRIC_CA_ENDPOINT: fabric-ca:7054
      FABRIC_NETWORK_NAME: ${FABRIC_NETWORK_NAME:-vendorchain-network}
      FABRIC_CHANNEL_NAME: ${FABRIC_CHANNEL_NAME:-vendorchain-channel}
      FABRIC_CHAINCODE_NAME: ${FABRIC_CHAINCODE_NAME:-contract-chaincode}
    volumes:
      - ./fastapi-gateway:/app
      - ./fabric-network/organizations:/app/fabric-config/organizations:ro
    ports:
      - "8000:8000"
    networks:
      - vendorchain-network
    working_dir: /app
    command: >
      sh -c "pip install fastapi uvicorn sqlalchemy psycopg2-binary pydantic pydantic-settings email-validator &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Hyperledger Fabric Certificate Authority
  ca.org1.vendorchain.com:
    image: hyperledger/fabric-ca:1.5.7
    container_name: ca.org1.vendorchain.com
    restart: unless-stopped
    environment:
      FABRIC_CA_HOME: /etc/hyperledger/fabric-ca-server
      FABRIC_CA_SERVER_CA_NAME: ca-org1
      FABRIC_CA_SERVER_TLS_ENABLED: true
      FABRIC_CA_SERVER_PORT: 7054
      FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS: 0.0.0.0:17054
    ports:
      - "7054:7054"
      - "17054:17054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - fabric_ca_data:/etc/hyperledger/fabric-ca-server
      - ./fabric-network/organizations/fabric-ca/server:/etc/hyperledger/fabric-ca-server
    networks:
      - vendorchain-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "7054"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Hyperledger Fabric Orderer
  orderer.vendorchain.com:
    image: hyperledger/fabric-orderer:2.5.4
    container_name: orderer.vendorchain.com
    restart: unless-stopped
    environment:
      FABRIC_LOGGING_SPEC: INFO
      ORDERER_GENERAL_LISTENADDRESS: 0.0.0.0
      ORDERER_GENERAL_LISTENPORT: 7050
      ORDERER_GENERAL_LOCALMSPID: OrdererMSP
      ORDERER_GENERAL_LOCALMSPDIR: /var/hyperledger/orderer/msp
      ORDERER_GENERAL_TLS_ENABLED: true
      ORDERER_GENERAL_TLS_PRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_GENERAL_TLS_CERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_GENERAL_TLS_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_GENERAL_CLUSTER_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_GENERAL_BOOTSTRAPMETHOD: none
      ORDERER_CHANNELPARTICIPATION_ENABLED: true
      ORDERER_ADMIN_TLS_ENABLED: true
      ORDERER_ADMIN_TLS_CERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_ADMIN_TLS_PRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_ADMIN_TLS_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_ADMIN_TLS_CLIENTROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_ADMIN_LISTENADDRESS: 0.0.0.0:7053
      ORDERER_OPERATIONS_LISTENADDRESS: 0.0.0.0:17050
      ORDERER_METRICS_PROVIDER: prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - fabric_orderer_data:/var/hyperledger/production/orderer
      - ./fabric-network/organizations/ordererOrganizations/vendorchain.com/orderers/orderer.vendorchain.com/msp:/var/hyperledger/orderer/msp:ro
      - ./fabric-network/organizations/ordererOrganizations/vendorchain.com/orderers/orderer.vendorchain.com/tls:/var/hyperledger/orderer/tls:ro
    ports:
      - "7050:7050"
      - "7053:7053"
      - "17050:17050"
    networks:
      - vendorchain-network
    depends_on:
      ca.org1.vendorchain.com:
        condition: service_started
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "7050"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Hyperledger Fabric Peer
  peer0.org1.vendorchain.com:
    image: hyperledger/fabric-peer:2.5.4
    container_name: peer0.org1.vendorchain.com
    restart: unless-stopped
    environment:
      CORE_VM_ENDPOINT: unix:///host/var/run/docker.sock
      CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE: vendor-contract-management_vendorchain-network
      FABRIC_LOGGING_SPEC: INFO
      CORE_PEER_TLS_ENABLED: true
      CORE_PEER_PROFILE_ENABLED: false
      CORE_PEER_TLS_CERT_FILE: /etc/hyperledger/fabric/tls/server.crt
      CORE_PEER_TLS_KEY_FILE: /etc/hyperledger/fabric/tls/server.key
      CORE_PEER_TLS_ROOTCERT_FILE: /etc/hyperledger/fabric/tls/ca.crt
      CORE_PEER_ID: ${CORE_PEER_ID:-peer0.org1.vendorchain.com}
      CORE_PEER_ADDRESS: peer0.org1.vendorchain.com:7051
      CORE_PEER_LISTENADDRESS: 0.0.0.0:7051
      CORE_PEER_CHAINCODEADDRESS: peer0.org1.vendorchain.com:7052
      CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:7052
      CORE_PEER_GOSSIP_BOOTSTRAP: peer0.org1.vendorchain.com:7051
      CORE_PEER_GOSSIP_EXTERNALENDPOINT: peer0.org1.vendorchain.com:7051
      CORE_PEER_LOCALMSPID: Org1MSP
      CORE_PEER_MSPCONFIGPATH: /etc/hyperledger/fabric/msp
      CORE_OPERATIONS_LISTENADDRESS: 0.0.0.0:17051
      CORE_METRICS_PROVIDER: prometheus
      CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG: '{"peername":"peer0org1"}'
      CORE_CHAINCODE_EXECUTETIMEOUT: 300s
      CORE_LEDGER_STATE_STATEDATABASE: CouchDB
      CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS: couchdb:5984
      CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME: ${COUCHDB_USER:-admin}
      CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD: ${COUCHDB_PASSWORD:-adminpw}
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - fabric_peer_data:/var/hyperledger/production
      - ./fabric-network/organizations/peerOrganizations/org1.vendorchain.com/peers/peer0.org1.vendorchain.com/msp:/etc/hyperledger/fabric/msp:ro
      - ./fabric-network/organizations/peerOrganizations/org1.vendorchain.com/peers/peer0.org1.vendorchain.com/tls:/etc/hyperledger/fabric/tls:ro
      - /var/run/docker.sock:/host/var/run/docker.sock
    ports:
      - "7051:7051"
      - "17051:17051"
    networks:
      - vendorchain-network
    depends_on:
      orderer.vendorchain.com:
        condition: service_started
      couchdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "7051"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 60s

  # CouchDB for Fabric Peer State Database
  couchdb:
    image: couchdb:3.3
    container_name: vendorchain-couchdb
    restart: unless-stopped
    environment:
      COUCHDB_USER: ${COUCHDB_USER:-admin}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD:-adminpw}
    ports:
      - "5984:5984"
    volumes:
      - ./fabric-network/docker/couchdb:/opt/couchdb/data
    networks:
      - vendorchain-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://admin:adminpw@localhost:5984/"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
